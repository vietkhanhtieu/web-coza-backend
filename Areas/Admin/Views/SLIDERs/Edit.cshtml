@model Final.Models.SLIDER

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/MyLayout.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit</title>

    @section _Header{

        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css">
        <style>
            p {
                font-weight: bold;
            }
        </style>
    }
</head>
<body>
    <div style="margin: 0px 5px">
        <div class="col-md-12">
            <div class="panel panel-primary">

                <div class="panel-heading" style="text-align: center">
                    Edit Slider
                </div>
                <div class="panel-body">
                    @using (Html.BeginForm("Edit", "SLIDERs", FormMethod.Post, new { enctype = "mutipart/form-data"}))
                    {
                        @Html.AntiForgeryToken()

                    <div class="form-horizontal">

                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.ID)

                        <div class="form-group">
                            @Html.Label("Hình ảnh", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                <input type="file" name="img" id="img" accept=".jpg, .png, .gif, .jpeg, .bmp" />
                            </div>
                            <div class="col-md-4">
                                <img src="~/images/@Model.IMG" width="400px" />
                            </div>
                        </div>

                        <div class="form-group">
                            <p class="control-label col-md-2">Tiêu đề</p>

                            <div class="col-md-10">
                                @Html.EditorFor(model => model.TITLE, new { htmlAttributes = new { @class = "form-control", id = "name" } })
                                @Html.ValidationMessageFor(model => model.TITLE, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <p class="control-label col-md-2">Mô tả</p>

                            <div class="col-md-10">
                                @Html.EditorFor(model => model.DESCRIPTION, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DESCRIPTION, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <p class="control-label col-md-2">Meta</p>

                            <div class="col-md-10">
                                @Html.EditorFor(model => model.META, new { htmlAttributes = new { @class = "form-control", id = "meta" } })
                                @Html.ValidationMessageFor(model => model.META, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <p class="control-label col-md-2">Hiển thị</p>

                            <div class="col-md-10">
                                @*<div class="checkbox">
                                    @Html.EditorFor(model => model.HIDE)
                                    @Html.ValidationMessageFor(model => model.HIDE, "", new { @class = "text-danger" })
                                </div>*@

                                @{ bool hide = (Model.HIDE.GetValueOrDefault(false) ? true : false);
                                 }

                                @Html.CheckBoxFor(Model => hide)
                            </div>
                        </div>

                        <div class="form-group">
                            <p class="control-label col-md-2">Vị trí</p>

                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ORDER, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ORDER, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <p class="control-label col-md-2">Ngày sửa</p>

                            <div class="col-md-10">
                                @Html.EditorFor(model => model.DATE_BEGIN, new { htmlAttributes = new { @class = "form-control", id = "myDateTimeInput" } })
                                @Html.ValidationMessageFor(model => model.DATE_BEGIN, "", new { @class = "text-danger" })
                            </div>
                        </div>



                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <a class="btn btn-default my-3" href="~/Admin/SLIDERs/Index">Back to List</a>
                                <input type="submit" value="Save" class="btn btn-success" />
                            </div>
                        </div>
                    </div>
                    }

                   
                    </div>
                </div>
            </div>
    </div>

    @section _Footer{
        <script>
            function convertToUnsign(str) {
                var vietnameseSigns = [
                    "aAeEoOuUiIdDyY-",
                    "áàạảãâấầậẩẫăắằặẳẵ",
                    "ÁÀẠẢÃÂẤẦẬẨẪĂẮẰẶẲẴ",
                    "éèẹẻẽêếềệểễ",
                    "ÉÈẸẺẼÊẾỀỆỂỄ",
                    "óòọỏõôốồộổỗơớờợởỡ",
                    "ÓÒỌỎÕÔỐỒỘỔỖƠỚỜỢỞỠ",
                    "úùụủũưứừựửữ",
                    "ÚÙỤỦŨƯỨỪỰỬỮ",
                    "íìịỉĩ",
                    "ÍÌỊỈĨ",
                    "đ",
                    "Đ",
                    "ýỳỵỷỹ",
                    "ÝỲỴỶỸ",
                    "               "
                ];

                for (var i = 1; i < vietnameseSigns.length; i++) {
                    for (var j = 0; j < vietnameseSigns[i].length; j++) {
                        str = str.replace(vietnameseSigns[i][j], vietnameseSigns[0][i - 1]);
                    }
                }

                return str;
            }
        </script>
        }
</body>
</html>
